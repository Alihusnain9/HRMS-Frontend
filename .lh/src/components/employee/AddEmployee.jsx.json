{
    "sourceFile": "src/components/employee/AddEmployee.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1705666581644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1705666609927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,12 +13,19 @@\n     const handleChange = (e) => {\n         setEmployee({ ...employee, [e.target.name]: e.target.value });\n     };\n \n-    const handleSubmit = (e) => {\n+    const handleSubmit = async (e) => {\n         e.preventDefault();\n-        // Logic to send data to the backend\n-        console.log(employee);\n+        try {\n+            // Call the service function to create a new employee\n+            const newEmployee = await createEmployee(employee);\n+            console.log('Employee added:', newEmployee);\n+            // Handle post-creation logic (e.g., clear form, display success message)\n+        } catch (error) {\n+            console.error('Error creating employee:', error);\n+            // Handle error (e.g., display error message)\n+        }\n     };\n \n     return (\n         <Box p={4}>\n"
                },
                {
                    "date": 1705666632475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState } from 'react';\n import { Box, FormControl, FormLabel, Input, Button } from '@chakra-ui/react';\n-import { createEmployee } from './EmployeeService';\n+import { createEmployee } from '../EmployeeService';\n \n const AddEmployee = () => {\n     const [employee, setEmployee] = useState({\n         name: '',\n"
                },
                {
                    "date": 1705666637667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState } from 'react';\n import { Box, FormControl, FormLabel, Input, Button } from '@chakra-ui/react';\n-import { createEmployee } from '../EmployeeService';\n+import { createEmployee } from '..//EmployeeService';\n \n const AddEmployee = () => {\n     const [employee, setEmployee] = useState({\n         name: '',\n"
                },
                {
                    "date": 1705666643172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState } from 'react';\n import { Box, FormControl, FormLabel, Input, Button } from '@chakra-ui/react';\n-import { createEmployee } from '..//EmployeeService';\n+import { createEmployee } from '../..services/EmployeeService';\n \n const AddEmployee = () => {\n     const [employee, setEmployee] = useState({\n         name: '',\n"
                },
                {
                    "date": 1705666650506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState } from 'react';\n import { Box, FormControl, FormLabel, Input, Button } from '@chakra-ui/react';\n-import { createEmployee } from '../..services/EmployeeService';\n+import { createEmployee } from '../../services/EmployeeService';\n \n const AddEmployee = () => {\n     const [employee, setEmployee] = useState({\n         name: '',\n"
                },
                {
                    "date": 1705667475874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n const AddEmployee = () => {\n     const [employee, setEmployee] = useState({\n         name: '',\n-        email: '',\n+        emailI: '',\n         position: '',\n         // Add other relevant fields\n     });\n \n"
                },
                {
                    "date": 1705667690383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n const AddEmployee = () => {\n     const [employee, setEmployee] = useState({\n         name: '',\n-        emailI: '',\n+        emailId: '',\n         position: '',\n         // Add other relevant fields\n     });\n \n@@ -35,9 +35,9 @@\n                     <Input name=\"name\" type=\"text\" onChange={handleChange} />\n                 </FormControl>\n                 <FormControl id=\"email\" isRequired mt={4}>\n                     <FormLabel>Email</FormLabel>\n-                    <Input name=\"email\" type=\"email\" onChange={handleChange} />\n+                    <Input name=\"emailId\" type=\"email\" onChange={handleChange} />\n                 </FormControl>\n                 <FormControl id=\"position\" mt={4}>\n                     <FormLabel>Position</FormLabel>\n                     <Input name=\"position\" type=\"text\" onChange={handleChange} />\n"
                },
                {
                    "date": 1705668251639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState } from 'react';\n-import { Box, FormControl, FormLabel, Input, Button } from '@chakra-ui/react';\n+import { Box, FormControl, FormLabel, Input, Button, Flex, useMediaQuery } from '@chakra-ui/react';\n import { createEmployee } from '../../services/EmployeeService';\n \n const AddEmployee = () => {\n     const [employee, setEmployee] = useState({\n@@ -9,44 +9,47 @@\n         position: '',\n         // Add other relevant fields\n     });\n \n+    const [isLargerThan768] = useMediaQuery('(min-width: 768px)');\n+\n     const handleChange = (e) => {\n         setEmployee({ ...employee, [e.target.name]: e.target.value });\n     };\n \n     const handleSubmit = async (e) => {\n         e.preventDefault();\n         try {\n-            // Call the service function to create a new employee\n             const newEmployee = await createEmployee(employee);\n             console.log('Employee added:', newEmployee);\n-            // Handle post-creation logic (e.g., clear form, display success message)\n+            // Additional logic after creation\n         } catch (error) {\n             console.error('Error creating employee:', error);\n-            // Handle error (e.g., display error message)\n+            // Error handling logic\n         }\n     };\n \n     return (\n-        <Box p={4}>\n-            <form onSubmit={handleSubmit}>\n-                <FormControl id=\"name\" isRequired>\n-                    <FormLabel>Name</FormLabel>\n-                    <Input name=\"name\" type=\"text\" onChange={handleChange} />\n-                </FormControl>\n-                <FormControl id=\"email\" isRequired mt={4}>\n-                    <FormLabel>Email</FormLabel>\n-                    <Input name=\"emailId\" type=\"email\" onChange={handleChange} />\n-                </FormControl>\n-                <FormControl id=\"position\" mt={4}>\n-                    <FormLabel>Position</FormLabel>\n-                    <Input name=\"position\" type=\"text\" onChange={handleChange} />\n-                </FormControl>\n-                {/* Add other form controls as needed */}\n-                <Button mt={4} colorScheme=\"blue\" type=\"submit\">Add Employee</Button>\n-            </form>\n-        </Box>\n+        <Flex align=\"center\" justify=\"center\" minHeight={isLargerThan768 ? \"100vh\" : \"auto\"}>\n+            <Box p={4} width={isLargerThan768 ? \"50%\" : \"90%\"}>\n+                <form onSubmit={handleSubmit}>\n+                    <FormControl id=\"name\" isRequired>\n+                        <FormLabel>Name</FormLabel>\n+                        <Input name=\"name\" type=\"text\" onChange={handleChange} />\n+                    </FormControl>\n+                    <FormControl id=\"email\" isRequired mt={4}>\n+                        <FormLabel>Email</FormLabel>\n+                        <Input name=\"emailId\" type=\"email\" onChange={handleChange} />\n+                    </FormControl>\n+                    <FormControl id=\"position\" mt={4}>\n+                        <FormLabel>Position</FormLabel>\n+                        <Input name=\"position\" type=\"text\" onChange={handleChange} />\n+                    </FormControl>\n+                    {/* Add other form controls as needed */}\n+                    <Button mt={4} colorScheme=\"blue\" type=\"submit\">Add Employee</Button>\n+                </form>\n+            </Box>\n+        </Flex>\n     );\n };\n \n export default AddEmployee;\n"
                }
            ],
            "date": 1705666581644,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\nimport { Box, FormControl, FormLabel, Input, Button } from '@chakra-ui/react';\nimport { createEmployee } from './EmployeeService';\n\nconst AddEmployee = () => {\n    const [employee, setEmployee] = useState({\n        name: '',\n        email: '',\n        position: '',\n        // Add other relevant fields\n    });\n\n    const handleChange = (e) => {\n        setEmployee({ ...employee, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Logic to send data to the backend\n        console.log(employee);\n    };\n\n    return (\n        <Box p={4}>\n            <form onSubmit={handleSubmit}>\n                <FormControl id=\"name\" isRequired>\n                    <FormLabel>Name</FormLabel>\n                    <Input name=\"name\" type=\"text\" onChange={handleChange} />\n                </FormControl>\n                <FormControl id=\"email\" isRequired mt={4}>\n                    <FormLabel>Email</FormLabel>\n                    <Input name=\"email\" type=\"email\" onChange={handleChange} />\n                </FormControl>\n                <FormControl id=\"position\" mt={4}>\n                    <FormLabel>Position</FormLabel>\n                    <Input name=\"position\" type=\"text\" onChange={handleChange} />\n                </FormControl>\n                {/* Add other form controls as needed */}\n                <Button mt={4} colorScheme=\"blue\" type=\"submit\">Add Employee</Button>\n            </form>\n        </Box>\n    );\n};\n\nexport default AddEmployee;\n"
        }
    ]
}